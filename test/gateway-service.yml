spring:
  cloud:
    gateway:
      discovery:
        locator:
          #spring.cloud.gateway.discovery.locator.enabled=true 允许gateway服务获取注册中心的集成服务,只有添加了该属性才可以添加自定义路由
          #配置该属性后所有的微服务均可通过网关访问，访问格式http://gateway_host:gateway_port/SERVICE-ID/**(http://网关地址:网关端口/大写的serviceId/**)
          enabled: true
      # 应用于每个路由的过滤器定义列表。里面可以定义一些共同的filter，对所有路由都起作用
      default-filters:
      # routes路由列表。具体的路由信息，是一个数组，每一个路由基本包含以下部分
      routes:
      - id: 163
        uri: http://www.163.com/
        predicates:
        - Path=${server.servlet.context-path}/163/**

        #这个路由的唯一id，不定义的话为一个uuid
      - id: service-b-config
        #http请求为lb://前缀 + 服务id；ws请求为lb:ws://前缀 + 服务id；表示将请求负载到哪一个服务上
        uri: lb://service-b-config
        #predicates表示这个路由的请求匹配规则，只有符合这个规则的请求才会走这个路由。为一个数组，每个规则为并且的关系。
        # 1. name：规则名称，目前有10个，有Path，Query，Method，Header，After，Before，Between，Cookie，Host，RemoteAddr
        # 2. args：参数key-value键值对,例：
        predicates:
        - Path= /srvcbcfg/foo/** #只有第一个路径代表路由，后面的就说服务本身的路径了，前面多添加会导致404
        - Host= *
        filters:
        - StripPrefix= 1

server:
  port: 6061
  servlet:
    #server.servlet.context-path，由于gateway用的是webflux，所以这个设定其实是不生效的，现在还没有一个key来设定webflux的context-path
    #为了nginx能把请求都统一路由到gateway，所以必须要有一个统一的前缀，这里定义为wcq，nginx可以设置请求前缀为/wcq的请求都转发到gateway服务上。
    context-path: /wcq    # Context path of the application.应用程序的上下文路径。
